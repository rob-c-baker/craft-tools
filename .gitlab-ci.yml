stages:
  - test
  - package

# Runs out codeception test suite (just unit tests implemented for now)
run_tests:

  image: php:8.3

  tags:
    - docker

  stage: test

  cache:
    paths:
      - vendor/

  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - tests/_output
    # make the report available in Gitlab UI. see https://docs.gitlab.com/ee/ci/unit_test_reports.html
    reports:
      junit: tests/_output/report.xml

  variables:
    COMPOSER_AUTH_JSON: "{\"gitlab-token\":{\"gitlab.alanrogers.com\":\"$COMPOSER_TOKEN\"}}"

  before_script:
    # Install git and unzip (composer will need them) and dependencies for extensions etc
    - apt-get update && apt-get install -qqy git unzip libicu-dev libzip-dev libpng-dev && apt-get install -y libmagickwand-dev --no-install-recommends

    # Extensions we need that are not included in image
    - docker-php-ext-install -j$(nproc) bcmath intl zip exif gd
    - docker-php-ext-enable bcmath intl zip exif gd

    # Need imagick for ARImager...
#    - curl https://pecl.php.net/get/imagick-3.7.0.tgz --insecure --output imagick-3.7.0.tgz
#    - pecl install imagick-3.7.0.tgz
#    - docker-php-ext-enable imagick

    # Alternate install routine for Imagick on PHP 8.3 due to https://github.com/Imagick/imagick/issues/643
    - curl -L -o /tmp/imagick.tar.gz https://github.com/Imagick/imagick/archive/7088edc353f53c4bc644573a79cdcd67a726ae16.tar.gz
    - tar --strip-components=1 -xf /tmp/imagick.tar.gz
    - phpize
    - ./configure
    - make
    - make install
    - echo "extension=imagick.so" > /usr/local/etc/php/conf.d/ext-imagick.ini
    - rm -rf /tmp/*

    # Install composer
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

    # Add our auth token (Gitlab secret) so we can fetch from local repositories
    - echo "$COMPOSER_AUTH_JSON" > auth.json

    # Install all project dependencies
    - composer install

  script:

    # Run the test suite
    - vendor/bin/codecept run --xml --html



# Publishes a tag/branch to Composer Packages of the current project
composer_package:

  image: curlimages/curl:latest

  tags:
    - docker

  rules:
    - if: $CI_COMMIT_TAG

  stage: package

  variables:
    URL: "$CI_SERVER_PROTOCOL://$CI_SERVER_HOST:$CI_SERVER_PORT/api/v4/projects/$CI_PROJECT_ID/packages/composer?job_token=$CI_JOB_TOKEN"
  
  script:
    - VERSION=$(grep version composer.json | awk -F \" '{print $4}')
    - INSECURE=$([ "$CI_SERVER_PROTOCOL" = "http" ] && echo "--insecure" || echo "")
    - RESPONSE=$(curl -s -w "\n%{http_code}" $INSECURE --data tag=$CI_COMMIT_TAG $URL)
    - CODE=$(echo "$RESPONSE" | tail -n 1)
    - BODY=$(echo "$RESPONSE" | head -n 1)
    # Output state information
    - if [ $CODE -eq 201 ]; then
        echo "Package created - Code $CODE - $BODY";
      else
        echo "Could not create package - Code $CODE - $BODY";
        exit 1;
      fi

