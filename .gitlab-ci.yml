stages:
  - test
  - package

# Runs out codeception test suite (just unit tests implemented for now)
run_tests:

  image: gitlab.alanrogers.com:5050/web-dev/unit-test-docker-image

  tags:
    - docker

  stage: test

  rules:
    # If changes are pushed to any branch.
    - if: $CI_COMMIT_BRANCH

  cache:
    paths:
      - vendor/

  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - tests/_output
    # make the report available in Gitlab UI. see https://docs.gitlab.com/ee/ci/unit_test_reports.html
    reports:
      junit: tests/_output/report.xml

  variables:
    COMPOSER_AUTH_JSON: "{\"gitlab-token\":{\"gitlab.alanrogers.com\":{\"username\":\"web-dev-deployment\",\"token\":\"$COMPOSER_TOKEN\"}}}"

  before_script:

    # Add our auth token (Gitlab secret) so we can fetch from local repositories
    - echo "$COMPOSER_AUTH_JSON" > auth.json

    # Install all project dependencies
    - composer install

  script:

    # Run the test suite
    - vendor/bin/codecept run --xml --html



# Publishes a tag/branch to Composer Packages of the current project
composer_package:

  image: curlimages/curl:latest

  tags:
    - docker

  rules:
    # If a tag has just been made
    - if: $CI_COMMIT_TAG

  stage: package

  variables:
    URL: "$CI_SERVER_PROTOCOL://$CI_SERVER_HOST:$CI_SERVER_PORT/api/v4/projects/$CI_PROJECT_ID/packages/composer?job_token=$CI_JOB_TOKEN"
  
  script:
    - INSECURE=$([ "$CI_SERVER_PROTOCOL" = "http" ] && echo "--insecure" || echo "")
    - RESPONSE=$(curl -s -w "\n%{http_code}" $INSECURE --data tag=$CI_COMMIT_TAG $URL)
    - CODE=$(echo "$RESPONSE" | tail -n 1)
    - BODY=$(echo "$RESPONSE" | head -n 1)
    # Output state information
    - if [ $CODE -eq 201 ]; then
        echo "Package created - Code $CODE - $BODY";
      else
        echo "Could not create package - Code $CODE - $BODY";
        exit 1;
      fi

